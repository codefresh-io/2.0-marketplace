apiVersion: argoproj.io/v1alpha1
kind: WorkflowTemplate
metadata:
  name: argo-hub.git.0.0.1
  annotations:
    argo-hub/version: '0.0.1'
    argo-hub/description: 'Generic Git operations'
    argo-hub/license: 'MIT'
    argo-hub/owner_name: 'Vadim Gusev'
    argo-hub/owner_email: 'vadim.gusev@codefresh.io'
    argo-hub/owner_avatar: 'https://avatars.githubusercontent.com/u/77272973?v=4'
    argo-hub/owner_url: 'https://github.com/vadimgusev-codefresh'
    argo-hub/categories: 'git'
    argo-hub/icon_url: "https://cdn.jsdelivr.net/gh/codefresh-io/argo-hub@main/workflows/git/assets/icon.svg"
    argo-hub/icon_background: "#f4f4f4"
spec:
  templates:
    - name: clone-s3
      metadata:
        annotations:
          argo-hub-template/description: 'Clone a repository and push it as an artifact to s3'
          argo-hub-template/icon_url: "https://cdn.jsdelivr.net/gh/codefresh-io/argo-hub@main/workflows/kaniko/assets/icon.svg"
          argo-hub-template/icon_background: "#f4f4f4"
      inputs:
        parameters:
          - name: REPO
          - name: REVISION
            default: main
          - name: GIT_TOKEN_SECRET
          - name: KEY
            default: '{{ workflow.name }}/git-repo'
        artifacts:
          - name: repo
            path: /tmp/repo
            git:
              repo: '{{ inputs.parameters.REPO }}'
              revision: '{{ inputs.parameters.REVISION }}'
              usernameSecret:
                name: '{{ inputs.parameters.GIT_TOKEN_SECRET }}'
                key: token
      outputs:
        artifacts:
          - name: repo
            path: /tmp/repo
            s3:
              key: '{{ inputs.parameters.KEY }}'
      container:
        image: alpine
        workingDir: '{{ inputs.artifacts.repo.path }}'
        command: [sh, -c]
        args: ["ls"]

    - name: clone
      metadata:
        annotations:
          argo-hub-template/description: 'Clone a git http(s) url to into a specified output artifact (requires git token).'
          argo-hub-template/icon_url: "https://cdn.jsdelivr.net/gh/codefresh-io/argo-hub@main/workflows/git/assets/icon.svg"
          argo-hub-template/icon_background: "#f4f4f4"
      inputs:
        parameters:
          - name: REPOURL
          - name: REVISION
            default: main
          - name: GIT_TOKEN_SECRET
      script:
        image: quay.io/bitnami/git
        command: [ bash ]
        source: |
          REPOURL="{{inputs.parameters.REPOURL}}"
          REVISION="{{inputs.parameters.REVISION}}"
          TOKEN="{{inputs.parameters.GIT_TOKEN_SECRET}}"
          DIRPATH="{{ outputs.artifacts.REPO.path }}"
          echo "inputs  REPO:$REPO REVISION:$REVISION DIRPATH:$DIRPATH"
          mkdir -p $DIRPATH && cd $DIRPATH
          PATTERN="https://" && CHANGE="https://token:$TOKEN@" && TOKEN_REPO="${REPOURL/$PATTERN/"$CHANGE"}"
          git clone $TOKEN_REPO $DIRPATH -b $REVISION
      outputs:
        artifacts:
          - name: REPO
            path: /tmp/repo

    - name: commit
      metadata:
        annotations:
          argo-hub-template/description: 'commit and push a git (input) artifact repository, Requirements: remote origin already in, check by "git config --get remote.origin.url" '
          argo-hub-template/icon_url: "https://cdn.jsdelivr.net/gh/codefresh-io/argo-hub@main/workflows/git/assets/icon.svg"
          argo-hub-template/icon_background: "#f4f4f4"
      inputs:
        parameters:
          - name: MESSAGE
          - name: GIT_USER_NAME
          - name: GIT_USER_EMAIL
          - name: GIT_FILES
            default: '.'
        artifacts:
          - name: REPO
            path: /tmp/repo
      script:
        image: quay.io/bitnami/git
        command: [ bash ]
        source: |
          MESSAGE="{{inputs.parameters.MESSAGE}}"
          GIT_USER_NAME="{{inputs.parameters.GIT_USER_NAME}}"
          GIT_USER_EMAIL="{{inputs.parameters.GIT_USER_EMAIL}}"
          GIT_FILES="{{inputs.parameters.GIT_FILES}}"
          DIRPATH="{{ inputs.artifacts.REPO.path }}"  && cd $DIRPATH
          echo "Using User details/message:{ GIT_USER_NAME:$GIT_USER_NAME, GIT_USER_EMAIL:$GIT_USER_EMAIL, MESSAGE:$MESSAGE }"
          # config user/email
          git config user.name "${GIT_USER_NAME}" && git config --global user.email "${GIT_USER_EMAIL}"
          # add commit & push
          echo "Using remote.origin.url as remote target"
          git add $GIT_FILES  && git commit -am "$MESSAGE" && git push
