apiVersion: argoproj.io/v1alpha1
kind: WorkflowTemplate
metadata:
  name: argo-hub.registry.0.0.1
  annotations:
    argo-hub/version: '0.0.1'
    argo-hub/description: 'RegClient template'
    argo-hub/categories: 'utilities'
    argo-hub/license: 'MIT'
    argo-hub/owner_name: 'Matthew Chung'
    argo-hub/owner_email: 'matthew.chung@codefresh.io'
    argo-hub/owner_avatar: 'https://github.com/matthewchungcodefresh.png'
    argo-hub/owner_url: 'https://github.com/matthewchungcodefresh'
    argo-hub/icon_url: "https://github.com/codefresh-io/argo-hub@main/workflows/registry/assets/icon.svg"
    argo-hub/icon-background: "#f4f4f4"
spec:
  templates:
    - name: add-tag
      serviceAccountName: argo-hub.registry.0.0.1
      metadata:
        annotations:
          argo-hub-template/description: 'Copies an image to a new location / retags an image in the same registry'
          argo-hub-template/icon_url: "https://github.com/codefresh-io/argo-hub@main/workflows/registry/assets/icon.svg"
          argo-hub-template/icon_background: "#f4f4f4"
      retryStrategy:
        limit: "3"
        retryPolicy: "Always"
        backoff:
          duration: "5s"
      inputs:
        parameters:
          # required
          - name: IMAGE
          - name: SRC_TAG
          - name: DST_TAG
      container:
        name: main
        imagePullPolicy: Always
        image: regclient/regctl:alpine
        command:
          - regctl
          - image
          - copy
          - '{{ inputs.parameters.IMAGE }}:{{ inputs.parameters.SRC_TAG }}'
          - '{{ inputs.parameters.IMAGE }}:{{ inputs.parameters.DST_TAG }}'
          - --verbosity
          - debug
        volumeMounts:
          - mountPath: /home/appuser/.docker/ #change maybe?
            name: docker-config

    - name: image-inspect
      serviceAccountName: argo-hub.registry.0.0.1
      metadata:
        annotations:
          argo-hub-template/description: 'Pulls the image config json blob'
          argo-hub-template/icon_url: "https://github.com/codefresh-io/argo-hub@main/workflows/registry/assets/icon.svg"
          argo-hub-template/icon_background: "#f4f4f4"
      retryStrategy:
        limit: "3"
        retryPolicy: "Always"
        backoff:
          duration: "5s"
      inputs:
        parameters:
          # required
          - name: IMAGE
          - name: TAG
      container:
        name: main
        imagePullPolicy: Always
        image: regclient/regctl:alpine
        command:
          - regctl
          - image
          - inspect
          - '{{ inputs.parameters.IMAGE }}:{{ inputs.parameters.TAG }}'
          - --verbosity
          - debug
        volumeMounts:
          - mountPath: /home/appuser/.docker/ #change maybe?
            name: docker-config

    - name: tag-delete
      serviceAccountName: argo-hub.registry.0.0.1
      metadata:
        annotations:
          argo-hub-template/description: 'Deletes a tag from an image'
          argo-hub-template/icon_url: "https://github.com/codefresh-io/argo-hub@main/workflows/registry/assets/icon.svg"
          argo-hub-template/icon_background: "#f4f4f4"
      retryStrategy:
        limit: "3"
        retryPolicy: "Always"
        backoff:
          duration: "5s"
      inputs:
        parameters:
          # required
          - name: IMAGE
          - name: TAG
      container:
        name: main
        imagePullPolicy: Always
        image: regclient/regctl:alpine
        command:
          - regctl
          - tag
          - delete
          - '{{ inputs.parameters.IMAGE }}:{{ inputs.parameters.TAG }}'
          - --verbosity
          - debug
        volumeMounts:
          - mountPath: /home/appuser/.docker/ #change maybe?
            name: docker-config

    - name: tag-list
      serviceAccountName: argo-hub.registry.0.0.1
      metadata:
        annotations:
          argo-hub-template/description: 'Deletes a tag from an image'
          argo-hub-template/icon_url: "https://github.com/codefresh-io/argo-hub@main/workflows/registry/assets/icon.svg"
          argo-hub-template/icon_background: "#f4f4f4"
      retryStrategy:
        limit: "3"
        retryPolicy: "Always"
        backoff:
          duration: "5s"
      inputs:
        parameters:
          # required
          - name: IMAGE
          - name: SRC_TAG
          - name: DST_TAG
      container:
        name: main
        imagePullPolicy: Always
        image: regclient/regctl:alpine
        command:
          - regctl
          - tag
          - list
        volumeMounts:
          - mountPath: /home/appuser/.docker/ #change maybe?
            name: docker-config